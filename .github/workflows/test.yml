name: tests

on: [push, pull_request]

jobs:
  linux_gcc:
    name: ${{ matrix.config }} Linux ${{ matrix.arch }}-bit (GCC)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [32, 64]
        include:
          - arch: 32
            COMPILE_ARCH: i386
            make_ARCH: x86
          - arch: 64
            COMPILE_ARCH: amd64
            make_ARCH: x86_64
#          - c: gcc

    steps:
    - name: Install tools
      run: |
        if [ ${{ matrix.arch }} -eq 32 ]; then
            sudo dpkg --add-architecture i386
            sudo apt-get update -y
            sudo apt-get -y install gcc-multilib g++-multilib
        fi
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      run: |
        cd build/linux
          make -j 4 ARCH=${{ matrix.make_ARCH }} COMPILE_ARCH=${{ matrix.COMPILE_ARCH }}

    - uses: actions/upload-artifact@v2
      with:
        name: Linux
        path: build/linux/build/**/*.so
        if-no-files-found: error
#        retention-days: 5

  windows_gcc:
    name: ${{ matrix.config }} Windows ${{ matrix.arch }}-bit (GCC)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [32, 64]
        include:
          - arch: 32
            msystem: MINGW32
            prefix: mingw-w64-i686
            make_ARCH: x86
          - arch: 64
            msystem: MINGW64
            prefix: mingw-w64-x86_64
            make_ARCH: x86_64
#          - c: gcc

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        install: ${{ matrix.prefix }}-make ${{ matrix.prefix }}-binutils ${{ matrix.prefix }}-gcc
        msystem: ${{ matrix.msystem }}
        path-type: minimal
        release: false
        update: false

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      run: |
        cd build/linux
          make -j 4 ARCH=${{ matrix.make_ARCH }} COMPILE_ARCH=${{ matrix.COMPILE_ARCH }}
        
 #   - name: Install
 #     run: make install DESTDIR=./bin

    - uses: actions/upload-artifact@v2
      with:
        name: Windows
        path: build/linux/build/**/*.dll
        if-no-files-found: error
#        retention-days: 5

  pak8a:
    name: win32-qvm
    runs-on: windows-latest
    strategy:
      fail-fast: false
#     matrix:
#        include:
#          - c: gcc

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      shell: cmd
      run: |
          cd build/win32-qvm
          call .\compile.bat
# make -j 4 install DESTDIR=build/bin     

    - uses: actions/upload-artifact@v2
      with:
        name: pak8a(win32-qvm)
        path: |
         build/win32-qvm/pak8a.pk3
#        if-no-files-found: error
#        retention-days: 5
